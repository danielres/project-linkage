// ARTICLE ###########

.article {
	padding: 0 $page-border/2 $page-border;
	@include mq(medium) {
		padding: 0 0 $page-border;
	}
	h2 {
		position: sticky;
		top: $u;
		z-index: z(up);
		background-color: $white;
		box-shadow: 0 $u/-2 0 $u/2 $white, 0 $u/4 0 $white;
		padding-right: $u;
		@include mq(medium) {
			top: $u * 4;
		}
	}
	@extend .grid;
	align-items: start;
	grid-template-columns: 1fr;
	@include mq(medium) {
		grid-template-columns: repeat(3, 1fr);
	}
	@include mq(huge) {
		grid-template-columns: repeat(6, 1fr);
	}
	&__header {
		display: contents;
	}
	&__kicker {
		@extend .fs-1;
		display: block;
		margin-bottom: $u;
	}
	&__heading {
		@include mq(medium) {
			grid-column: span 2 / -1;
		}
		@include mq(huge) {
			align-self: stretch;
			grid-column: 3 / span 2;
			&:only-child {
				grid-column-end: -1;
			}
		}
		@include hyphens(none);
		margin: 0;
		padding: $u $u $u 0;
		box-shadow: 0 -1px $black inset;
		overflow: hidden;
	}
	&__intro {
		figure {
			width: auto;
			background-color: pink;
		}
		@include mq(medium) {
			grid-column: span 2 / -1;
		}
		box-shadow: 0 -1px $black inset;
		display: flex;
		align-items: flex-end;
		@include mq(huge) {
			align-self: stretch;
			padding-top: $u;
		}
	}
	&__block {
		display: flex;
		flex-direction: column;
		justify-content: space-between;
		.inner {
			height: 100%;
			display: flex;
			flex-direction: column;
			justify-content: space-between;
		}
	}
	&__figure {
		position: relative;
		grid-row: 2;
		align-self: stretch;
		@include mq(medium) {
			grid-row: 1 / span calc(var(--articleHeaderCount) + (var(--articleBlockCount2) / 2));
			grid-column: 1;
		}
		@include mq(huge) {
			grid-column: 1 / span 2;
			grid-row: 1 / span calc((var(--articleHeaderCount) / 2) + (var(--articleBlockCount4) / 4));
		}
		figcaption {
			position: absolute;
			bottom: $u/2;
			right: $u/2;
			z-index: z(up);
			padding: $u * $sqrt2-minor $u * $sqrt2-major;
			@extend %fs-2;
			text-align: right;
			background-color: $white;
		}
	}
	&__picture {
		overflow: hidden;
		background: $white;
		height: 0;
		position: relative;
		padding-bottom: $sqrt2-major * 100%;
		@include mq(medium) {
			padding-bottom: 1 / $sqrt2-major * 100%;
			position: sticky;
			top: var(--headerHeight);
		}
		@include mq(huge) {
			//padding-bottom: $sqrt2-major * 100%;
			padding-bottom: 100%;
		}
		img {
			position: absolute;
			object-fit: cover;
			object-position: center ($phi-minor * 100%);
			width: 100%;
			height: 100%;
			&.icon {
				object-fit: contain;
				padding: 0 $u;
			}
		}
	}
}
